---
swagger: "2.0"
info:
  description: "This API provides AdvantEDGE microservice & scenario deployment status\
    \ information collected in the Monitoring Engine. <p>**Micro-service**<br>[meep-mon-engine](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-mon-engine)\
    \ <p>**Type & Usage**<br>Platform interface to retrieve AdvantEDGE microservice\
    \ & scenario deployment status information <p>**Details**<br>API details available\
    \ at _your-AdvantEDGE-ip-address/api_"
  version: "1.0.0"
  title: "AdvantEDGE Monitoring Engine REST API"
  contact:
    name: "InterDigital AdvantEDGE Support"
    email: "AdvantEDGE@InterDigital.com"
  license:
    name: "Apache 2.0"
    url: "https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE"
basePath: "/mon-engine/v1"
tags:
- name: "Pod States"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /states:
    get:
      tags:
      - "Pod States"
      summary: "Get pods states"
      description: "Get status information of Core micro-services pods and Scenario\
        \ pods"
      operationId: "getStates"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "Pod type"
        required: false
        type: "string"
        enum:
        - "core"
        - "scenario"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "sandbox"
        in: "query"
        description: "Sandbox name"
        required: false
        type: "string"
        x-exportParamName: "Sandbox"
        x-optionalDataType: "String"
      - name: "long"
        in: "query"
        description: "Return detailed status information"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Long"
        x-optionalDataType: "String"
      responses:
        200:
          description: "successful operation"
          examples:
            application/json:
              podsStatus:
              - podName: "mypod"
                namespace: "default"
                meepApp: "pod1"
                meepOrigin: "scenario"
                meepScenario: "myScenario"
                phase: "Running"
                podInitialized: "True"
                podReady: "False"
                podScheduled: "True"
                podUnschedulable: "False"
                podConditionError: "containers with unready status: [myshel]"
                nbOkContainers: "0"
                nbTotalContainers: "1"
                nbPodRestart: "15005"
                logicalState: "Terminating"
                startTime: "2018-09-10 14:24:00 +0000 UTC"
          schema:
            $ref: "#/definitions/PodsStatus"
definitions:
  PodStatus:
    type: "object"
    properties:
      podType:
        type: "string"
        description: "Pod type"
      sandbox:
        type: "string"
        description: "Pod Sandbox"
      name:
        type: "string"
        description: "Pod name"
      namespace:
        type: "string"
        description: "Pod namespace"
      meepApp:
        type: "string"
        description: "Pod process name"
      meepOrigin:
        type: "string"
        description: "Pod origin(core, scenario)"
      meepScenario:
        type: "string"
        description: "Pod scenario name"
      phase:
        type: "string"
        description: "Pod phase"
      podInitialized:
        type: "string"
        description: "Pod initialized (true/false)"
      podReady:
        type: "string"
        description: "Pod ready (true/false)"
      podScheduled:
        type: "string"
        description: "Pod scheduled (true/false)"
      podUnschedulable:
        type: "string"
        description: "Pod unschedulable (true/false)"
      podConditionError:
        type: "string"
        description: "Pod error message"
      containerStatusesMsg:
        type: "string"
        description: "Failed container error message"
      nbOkContainers:
        type: "string"
        description: "Number of containers that are up"
      nbTotalContainers:
        type: "string"
        description: "Number of total containers in the pod"
      nbPodRestart:
        type: "string"
        description: "Number of container failures leading to pod restarts"
      logicalState:
        type: "string"
        description: "State that is mapping the kubernetes api state"
      startTime:
        type: "string"
        description: "Pod creation time"
    example:
      podStatus:
      - type: "core"
        sandbox: "sbox-1"
        podName: "mypod"
        namespace: "sbox-1"
        meepApp: "pod1"
        meepOrigin: "scenario"
        meepScenario: "myScenario"
        phase: "Running"
        podInitialized: "True"
        podReady: "False"
        podScheduled: "True"
        podUnschedulable: "False"
        podConditionError: "containers with unready status: [myshel]"
        nbOkContainers: "0"
        nbTotalContainers: "1"
        nbPodRestart: "15005"
        startTime: "2018-09-10 14:24:00 +0000 UTC"
  PodsStatus:
    type: "object"
    properties:
      podStatus:
        type: "array"
        items:
          $ref: "#/definitions/PodStatus"
    description: "List of all pods status"
    example: {}
responses:
  Std200:
    description: "OK"
  Std404:
    description: "Not found"
  Std500:
    description: "Internal server error"
externalDocs:
  description: "GitHub Wiki"
  url: "https://github.com/InterDigitalInc/AdvantEDGE/wiki"
